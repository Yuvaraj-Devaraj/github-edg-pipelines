name: Target Workflow

on:
  workflow_dispatch:
    inputs:
      github_package_url:
        description: 'github_package_url'
        required: true
        default: 'default_value'
      github_artefact_id:
        description: 'github_artefact_id'
        required: true
        default: 'default_value'
      github_caller_workflow_run_id:
        description: 'github_caller_workflow_run_id:'
        required: true
        default: 'default_value'
      github_sha_id:
        description: 'github_sha_id:'
        required: true
        default: 'default_value'
      github_workflow_name:
        description: 'github_workflow_name:'
        required: true
        default: 'default_value'
      github_repository_name:
        description: 'github_repository_name:'
        required: true
        default: 'default_value'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: "cgi-dv"
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Print input parameter
        run: |
            echo "Github Package Url is ${{ github.event.inputs.github_package_url }}"
            echo "Artefact Id is ${{ github.event.inputs.github_artefact_id }}"
            echo "Workflow Run Id is ${{ github.event.inputs.github_caller_workflow_run_id }}"
            echo "Workflow SHA Id is ${{ github.event.inputs.github_sha_id }}"
            echo "WorkflowName is ${{ github.event.inputs.github_workflow_name }}"
            echo "RepositoryName is ${{ github.event.inputs.github_repository_name }}"

      - name: Create working Directory
        run: |
          sudo mkdir /working_directory
          sudo chmod 777 /working_directory
          #wget ${{ github.event.inputs.github_package_url }} -O /working_directory/package.zip
          #echo "unzip the file..."
          #cd /working_directory
          #7z x package.zip

          #ls working_directory
          #ls /working_directory/package


      - uses: actions/download-artifact@v4
        with:
          path: /working_directory
          github-token: ${{ secrets.PAT_TOKEN }}
          repository: ${{ github.event.inputs.github_repository_name }}
          run-id: ${{ github.event.inputs.github_caller_workflow_run_id }}

      - name: List files
        shell: pwsh
        run: |
          ls /working_directory/bicep-package
          #bicep generate-params main.bicep


      # - name: Run Azure PS script
      #   uses: azure/powershell@v1
      #   with:
      #     inlineScript: |
      #       ls /working_directory/bicep-package
      #       # Generate the bicep param
      #       bicep generate-params main.bicep
      #       $param=get-content -path /working_directory/bicep-package/main.parameters.json

      #     azPSVersion: '3.1.0'

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Deploy Bicep
        id: deploy
        uses: azure/arm-deploy@v1
        with:
          deploymentName: ${{ github.run_number }}
          scope: subscription
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          region: westeurope
          template: /working_directory/bicep-package/main.bicep
          parameters: /working_directory/bicep-package/main.parameters.json environment=dv location=westeurope franchisee=abc location_shortname=weu
          failOnStdErr: true
          additionalArguments: "--what-if"
